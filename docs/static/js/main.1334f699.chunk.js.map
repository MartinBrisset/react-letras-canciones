{"version":3,"sources":["components/Artista.js","components/Cancion.js","components/Formulario.js","App.js","reportWebVitals.js","index.js"],"names":["Artista","info","strArtist","strArtistThumb","strGenre","strBiographyES","className","src","alt","href","strFacebook","target","rel","strTwitter","Cancion","letra","length","Formulario","setBusquedaLetra","useState","artista","cancion","busqueda","setBusqueda","error","setError","actualizarState","e","name","value","type","placeholder","onChange","onClick","preventDefault","trim","App","busquedaLetra","setLetra","setInfo","useEffect","Object","keys","consultarApiLetra","a","url","url2","Promise","all","axios","get","data","lyrics","artists","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1334f699.chunk.js","sourcesContent":["const Artista = ({info}) => {\r\n\r\n    if (!info.strArtist) {\r\n        return null\r\n    }\r\n\r\n    \r\n    const {strArtistThumb, strGenre, strBiographyES, strArtist} = info\r\n    \r\n    return ( \r\n        <>\r\n            <div className='card border-light'>\r\n                <div className='card-header bg-primary text-light font-weight-bold'>\r\n                    Informacion del Artista\r\n                </div>\r\n                <div className='card-body'>\r\n                    <img src={strArtistThumb} alt='Logo Artista' />\r\n                    <p className='card-text'>\r\n                        Genero: {strGenre}\r\n                    </p>\r\n                    <h2 className='card-text'>\r\n                        Biografia: {strArtist}\r\n                    </h2>\r\n                    <p className='card-text'>\r\n                        {strBiographyES}\r\n                    </p>\r\n                    <p className='card-text'>\r\n                        <a href={`https://${info.strFacebook}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i className=\"fab fa-facebook\"></i>\r\n                        </a>\r\n                        <a href={`https://${info.strTwitter}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i className=\"fab fa-twitter\"></i>\r\n                        </a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n \r\nexport default Artista;","const Cancion = ({letra}) => {\r\n\r\n    if (letra.length === 0) {\r\n        return null\r\n    }\r\n\r\n    return ( \r\n        <>\r\n            <h2>Letra canci√≥n</h2>\r\n            <p className='letra'>{letra}</p>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Cancion;","import { useState } from \"react\";\r\n\r\nconst Formulario = ({setBusquedaLetra}) => {\r\n\r\n    const [busqueda, setBusqueda] = useState({\r\n        artista: '',\r\n        cancion: ''\r\n    })\r\n\r\n    const [error, setError] = useState(false)\r\n\r\n    const {artista, cancion} = busqueda\r\n\r\n    const actualizarState = (e) => {\r\n        setBusqueda({\r\n            ...busqueda,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const buscarInfo = (e) => {\r\n        e.preventDefault()\r\n        if (artista.trim() === '' || cancion.trim() === '') {\r\n            setError(true)\r\n            return\r\n        }\r\n        setError(false)\r\n\r\n        setBusquedaLetra(busqueda)\r\n    }\r\n\r\n    return ( \r\n\r\n        <div className='bg-info'>\r\n            { error ? <p className='alert alert-danger text-center p-2'>Todos los campos son obligatorios</p> : null}\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <form\r\n                        className='col card tex-white bg-transparent mb-5 pt-5 pb-5'\r\n                    >\r\n                        <fieldset>\r\n                            <legend className='text-center'>\r\n                                Buscador de Letras de Canciones\r\n                            </legend>\r\n                            <div className='row'>\r\n                                <div className='col-md-6'>\r\n                                    <div className='form-group'>\r\n                                        <label>Artista</label>\r\n                                        <input\r\n                                            type='text'\r\n                                            className='form-control'\r\n                                            name='artista'\r\n                                            placeholder='Daddy Yankee'\r\n                                            onChange={actualizarState}\r\n                                            value={artista}\r\n                                            ></input>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='col-md-6'>\r\n                                    <div className='form-group'>\r\n                                        <label>Cancion</label>\r\n                                        <input\r\n                                            type='text'\r\n                                            className='form-control'\r\n                                            name='cancion'\r\n                                            placeholder='Gasolina'\r\n                                            onChange={actualizarState}\r\n                                            value={cancion}\r\n                                        ></input>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <button\r\n                                type='submit'\r\n                                className='btn btn-primary float-right'\r\n                                onClick={buscarInfo}\r\n                            >\r\n                                Buscar\r\n                            </button>\r\n                        </fieldset>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n \r\nexport default Formulario;","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Artista from \"./components/Artista\";\nimport Cancion from \"./components/Cancion\";\nimport Formulario from \"./components/Formulario\";\n\nfunction App() {\n\n  const [busquedaLetra, setBusquedaLetra] = useState({})\n  const [letra, setLetra] = useState('')\n  const [info, setInfo] = useState({})\n\n  useEffect(() => {\n    if (Object.keys(busquedaLetra).length === 0) {\n      return\n    }\n\n    const consultarApiLetra = async () => {\n\n      const {artista, cancion} = busquedaLetra\n\n\n\n      const url = `https://api.lyrics.ovh/v1/${artista}/${cancion}`\n      const url2 = `https://www.theaudiodb.com/api/v1/json/1/search.php?s=${artista}`\n\n      const [letra, info] = await Promise.all([\n        axios.get(url),\n        axios.get(url2),\n      ])\n\n      setLetra(letra.data.lyrics)\n      setInfo(info.data.artists[0])\n    }\n    consultarApiLetra()\n\n  }, [busquedaLetra])\n\n  return (\n\n    <>\n      <Formulario\n        setBusquedaLetra={setBusquedaLetra}\n      />\n\n      <div className='container mt-5'>\n        <div className='row'>\n          <div className='col-md-6'>\n            <Artista\n              info={info}\n            />\n          </div>\n          <div className='col-md-6'>\n            <Cancion\n              letra={letra}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}